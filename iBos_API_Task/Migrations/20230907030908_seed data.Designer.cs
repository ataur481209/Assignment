// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using iBos_API_Task.Model;

#nullable disable

namespace iBos_API_Task.Migrations
{
    [DbContext(typeof(iBosDbContext))]
    [Migration("20230907030908_seed data")]
    partial class seeddata
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("iBos_API_Task.Model.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeId"), 1L, 1);

                    b.Property<string>("EmployeeCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("EmployeeName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("EmployeeSalary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SupervisorId")
                        .HasColumnType("int");

                    b.HasKey("EmployeeId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            EmployeeId = 502030,
                            EmployeeCode = "EMP320",
                            EmployeeName = "Mehedi Hasan",
                            EmployeeSalary = 50000m,
                            SupervisorId = 502036
                        },
                        new
                        {
                            EmployeeId = 502031,
                            EmployeeCode = "EMP321",
                            EmployeeName = "Ashikur Rahman",
                            EmployeeSalary = 45000m,
                            SupervisorId = 502036
                        },
                        new
                        {
                            EmployeeId = 502032,
                            EmployeeCode = "EMP322",
                            EmployeeName = "Rakibul Islam",
                            EmployeeSalary = 52000m,
                            SupervisorId = 502030
                        },
                        new
                        {
                            EmployeeId = 502033,
                            EmployeeCode = "EMP323",
                            EmployeeName = "Hasan Abdullah",
                            EmployeeSalary = 46000m,
                            SupervisorId = 502031
                        },
                        new
                        {
                            EmployeeId = 502034,
                            EmployeeCode = "EMP324",
                            EmployeeName = "Akib Khan",
                            EmployeeSalary = 66000m,
                            SupervisorId = 502032
                        },
                        new
                        {
                            EmployeeId = 502035,
                            EmployeeCode = "EMP325",
                            EmployeeName = "Rasel Shikder",
                            EmployeeSalary = 53500m,
                            SupervisorId = 502033
                        },
                        new
                        {
                            EmployeeId = 502036,
                            EmployeeCode = "EMP326",
                            EmployeeName = "Selim Reja",
                            EmployeeSalary = 59000m,
                            SupervisorId = 502035
                        });
                });

            modelBuilder.Entity("iBos_API_Task.Model.EmployeeAttendance", b =>
                {
                    b.Property<int>("EmployeeAttendanceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeAttendanceId"), 1L, 1);

                    b.Property<DateTime>("AttendanceDate")
                        .HasColumnType("date");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsAbsent")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOffday")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPresent")
                        .HasColumnType("bit");

                    b.HasKey("EmployeeAttendanceId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("EmployeeAttendances");

                    b.HasData(
                        new
                        {
                            EmployeeAttendanceId = 1,
                            AttendanceDate = new DateTime(2023, 6, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 502030,
                            IsAbsent = false,
                            IsOffday = false,
                            IsPresent = true
                        },
                        new
                        {
                            EmployeeAttendanceId = 2,
                            AttendanceDate = new DateTime(2023, 6, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 502030,
                            IsAbsent = true,
                            IsOffday = false,
                            IsPresent = false
                        },
                        new
                        {
                            EmployeeAttendanceId = 3,
                            AttendanceDate = new DateTime(2023, 6, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 502031,
                            IsAbsent = false,
                            IsOffday = false,
                            IsPresent = true
                        });
                });

            modelBuilder.Entity("iBos_API_Task.Model.EmployeeAttendance", b =>
                {
                    b.HasOne("iBos_API_Task.Model.Employee", "Employee")
                        .WithMany("EmployeeAttendances")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("iBos_API_Task.Model.Employee", b =>
                {
                    b.Navigation("EmployeeAttendances");
                });
#pragma warning restore 612, 618
        }
    }
}
